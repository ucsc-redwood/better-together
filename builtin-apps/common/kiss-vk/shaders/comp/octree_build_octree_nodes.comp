#version 460
layout(local_size_x = 256) in;

layout(std430, set = 0, binding = 0) readonly buffer Codes { uint codes[]; };
layout(std430, set = 0, binding = 1) readonly buffer LeftChild { int left_child[]; };
layout(std430, set = 0, binding = 2) readonly buffer PrefixLength { int prefix_length[]; };
layout(std430, set = 0, binding = 3) readonly buffer EdgeCount { uint edge_count[]; };
layout(std430, set = 0, binding = 4) readonly buffer Offsets { uint offsets[]; };
layout(std430, set = 0, binding = 5) writeonly buffer Children { uint children[]; };

layout(push_constant) uniform PC7 { uint n; }
pc7;

const int MORTON_BITS = 30;

void main() {
  uint ui = gl_GlobalInvocationID.x;
  if (ui >= pc7.n) return;
  int i = int(ui);

  int j = left_child[i];
  int first = min(i, j), last = max(i, j);
  int depth = prefix_length[i];
  int shift = MORTON_BITS - depth - 3;

  bool seen[8] = bool[8](false);
  int first_index[8];
  for (int k = first; k <= last; ++k) {
    int oct = int((codes[k] >> shift) & 0x7u);
    if (!seen[oct]) {
      seen[oct] = true;
      first_index[oct] = k;
    }
  }

  uint base = offsets[i];
  uint cursor = 0u;
  for (int oct = 0; oct < 8; ++oct) {
    if (seen[oct]) {
      children[base + cursor++] = uint(first_index[oct]);
    }
  }
}
